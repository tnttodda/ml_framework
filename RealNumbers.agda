open import ToddPrelude
open import CantorNumbers

‚Ñù : Set
‚Ñù = ‚Ñï √ó ‚ÑÇ

‚ÑùÃÇ : Set
‚ÑùÃÇ = ‚Ñù √ó ‚Ñï

postulate ‚Ñù-change : {n : ‚Ñï} ‚Üí (succ n , ‚ÑÇ‚ÇÄ) ‚â° (n , ‚ÑÇ‚ÇÅ)

‚Ñù‚ÇÄ ‚Ñù‚ÇÅ : ‚Ñù
‚Ñù‚ÇÄ = zero , ‚ÑÇ‚ÇÄ
‚Ñù‚ÇÅ = succ zero , ‚ÑÇ‚ÇÄ

_<‚Ñù_ : ‚Ñù ‚Üí ‚ÑùÃÇ ‚Üí ùîπ
(n , r) <‚Ñù ((m , s) , Œµ) = if (n =‚Ñï m) then (r <‚ÑÇ s) Œµ else (n <‚Ñï m)

_=‚Ñù_ : ‚Ñù ‚Üí ‚ÑùÃÇ ‚Üí ùîπ
(n , r) =‚Ñù ((m , s) , Œµ) = if (n =‚Ñï m) then (r =‚ÑÇ s) Œµ else (ff)

_||_ : ùîπ ‚Üí ùîπ ‚Üí ùîπ
ff || ff = ff
ff || tt = tt
tt || ff = tt
tt || tt = tt

_‚â§‚Ñù_ : ‚Ñù ‚Üí ‚ÑùÃÇ ‚Üí ùîπ
(r ‚â§‚Ñù s) = (r =‚Ñù s) || (r <‚Ñù s)

postulate lemma : (c : ‚ÑÇ) ‚Üí (Œµ : ‚Ñï) ‚Üí (‚ÑÇ‚ÇÄ =‚ÑÇ c) Œµ ‚â° ff ‚Üí (‚ÑÇ‚ÇÄ <‚ÑÇ c) Œµ ‚â° tt

‚Ñù‚ÇÄ-bottom : (r : ‚ÑùÃÇ) ‚Üí (‚Ñù‚ÇÄ =‚Ñù r) ‚â° ff ‚Üí (‚Ñù‚ÇÄ <‚Ñù r) ‚â° tt
‚Ñù‚ÇÄ-bottom ((zero , r) , Œµ) pr = lemma r Œµ pr
‚Ñù‚ÇÄ-bottom ((succ m , r) , _) pr = refl

record RealNumbers (ùï£ : Set) : Set‚ÇÅ where
  field
    ùï£‚ÇÄ ùï£‚ÇÅ : ùï£
    _<ùï£_ _=ùï£_ : ùï£ ‚Üí ùï£ ‚Üí ùîπ
    ùï£‚ÇÄ-bottom : (r : ùï£) ‚Üí (ùï£‚ÇÄ =ùï£ r) ‚â° ff ‚Üí (ùï£‚ÇÄ <ùï£ r) ‚â° tt

‚Ñùisùï£ : ‚Ñï ‚Üí RealNumbers ‚Ñù
RealNumbers.ùï£‚ÇÄ (‚Ñùisùï£ Œµ) = ‚Ñù‚ÇÄ
RealNumbers.ùï£‚ÇÅ (‚Ñùisùï£ Œµ) = ‚Ñù‚ÇÅ
RealNumbers._<ùï£_ (‚Ñùisùï£ Œµ) = Œª a b ‚Üí (a <‚Ñù (b , Œµ))
RealNumbers._=ùï£_ (‚Ñùisùï£ Œµ) = Œª a b ‚Üí (a =‚Ñù (b , Œµ))
RealNumbers.ùï£‚ÇÄ-bottom (‚Ñùisùï£ Œµ) = Œª r x ‚Üí ‚Ñù‚ÇÄ-bottom (r , Œµ) x
