open import ToddPrelude

‚ÑÇ : Set
‚ÑÇ = ‚Ñï ‚Üí ùïì

head : ‚ÑÇ ‚Üí ùïì
head Œ± = Œ± zero

tail : ‚ÑÇ ‚Üí ‚ÑÇ
tail Œ± = Œª n ‚Üí Œ± (succ n)

_::_ : {X : ‚Ñï ‚Üí Set} ‚Üí X 0 ‚Üí ((n : ‚Ñï) ‚Üí X(succ n)) ‚Üí ((n : ‚Ñï) ‚Üí X n)
(x :: Œ±) 0 = x
(x :: Œ±) (succ n) = Œ± n

‚ÑÇ‚ÇÄ ‚ÑÇ‚ÇÅ : ‚ÑÇ
‚ÑÇ‚ÇÄ n = ‚ÇÄ
‚ÑÇ‚ÇÅ n = ‚ÇÅ

_>‚ÑÇ_ : ‚ÑÇ ‚Üí ‚ÑÇ ‚Üí ‚Ñï ‚Üí ùîπ
(a >‚ÑÇ b) n = if (head a) =ùïì (head b) then (next n) else ((head a) =ùïì ‚ÇÅ) where
  next : ‚Ñï ‚Üí ùîπ
  next zero = ff
  next (succ n) = ((tail a) >‚ÑÇ (tail b)) n

_<‚ÑÇ_ : ‚ÑÇ ‚Üí ‚ÑÇ ‚Üí ‚Ñï ‚Üí ùîπ
(a <‚ÑÇ b) n = if (head a) =ùïì (head b) then (next n) else ((head b) =ùïì ‚ÇÅ) where
  next : ‚Ñï ‚Üí ùîπ
  next zero = ff
  next (succ n) = ((tail a) <‚ÑÇ (tail b)) n

_=‚ÑÇ_ : ‚ÑÇ ‚Üí ‚ÑÇ ‚Üí ‚Ñï ‚Üí ùîπ
(a =‚ÑÇ b) zero = (head a) =ùïì (head b)
(a =‚ÑÇ b) (succ n) = if (head a) =ùïì (head b) then ((tail a) =‚ÑÇ (tail b)) n else ff

max‚ÑÇ : ‚ÑÇ ‚Üí ‚ÑÇ ‚Üí ‚ÑÇ
max‚ÑÇ a b = Œª n ‚Üí if (a >‚ÑÇ b) n then a n else b n

{-# TERMINATING #-}

_+‚ÑÇ_ : ‚ÑÇ ‚Üí ‚ÑÇ ‚Üí ‚Ñï ‚Üí ‚ÑÇ
(c‚ÇÅ +‚ÑÇ c‚ÇÇ) n = (c‚ÇÅ +'‚ÑÇ c‚ÇÇ) zero where
  _+'‚ÑÇ_ : ‚ÑÇ ‚Üí ‚ÑÇ ‚Üí ‚Ñï ‚Üí ‚ÑÇ
  (a +'‚ÑÇ b) m = next (head a) (head b) where
    continue : ‚ÑÇ
    continue = if m <‚Ñï n then ((tail a) +'‚ÑÇ (tail b)) (succ m) else (tail a) 
    next : ùïì ‚Üí ùïì ‚Üí ‚ÑÇ
    next ‚ÇÄ ‚ÇÄ = ‚ÇÄ :: continue
    next ‚ÇÅ ‚ÇÅ = ‚ÑÇ‚ÇÅ
    next _ _ = ‚ÇÅ :: continue



